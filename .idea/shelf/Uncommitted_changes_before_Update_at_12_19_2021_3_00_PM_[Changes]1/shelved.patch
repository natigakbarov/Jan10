Index: src/test/resources/ui-config.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>mysql.url: jdbc:mysql://dev-hrm.yoll.io:3306/orangehrm_mysql\r\nyollhrm.url: http://dev-hrm.yoll.io/\r\nyollhrm.username:yoll-student\r\nyollhrm.password:Bootcamp5#\r\nyollhrm.database.username: root\r\nyollhrm.database.password: Bootcamp5#\r\nmealb.url: http://dev-mb.yoll.io/\r\nmb.database.url: jdbc:sqlserver://34.235.0.4:1433;databaseName=MealBDb\r\nmb.database.username: SA\r\nmb.database.password: asdf123!@#
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/test/resources/ui-config.properties b/src/test/resources/ui-config.properties
--- a/src/test/resources/ui-config.properties	
+++ b/src/test/resources/ui-config.properties	
@@ -4,7 +4,9 @@
 yollhrm.password:Bootcamp5#
 yollhrm.database.username: root
 yollhrm.database.password: Bootcamp5#
-mealb.url: http://dev-mb.yoll.io/
+mealb.url: http://dev-mb.yoll.io/Account/Login
+mealb.username: ChepCo
+mealb.password: wo3ls47x
 mb.database.url: jdbc:sqlserver://34.235.0.4:1433;databaseName=MealBDb
 mb.database.username: SA
-mb.database.password: asdf123!@#
\ No newline at end of file
+mb.database.password: asdf123!@#
Index: src/test/java/ui_automation/utilities/ExcelUtility.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ui_automation.utilities;\r\n\r\nimport org.apache.poi.xssf.usermodel.*;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\n\r\nimport org.apache.poi.ss.usermodel.Row.MissingCellPolicy;\r\npublic class ExcelUtility {\r\n    private static XSSFSheet workSheet;\r\n    private static XSSFWorkbook workBook;\r\n    private static XSSFCell cell;\r\n    private static XSSFRow row;\r\n    private static MissingCellPolicy xRow;\r\n\r\n\r\n    public static void setExcelFile(String Path, String SheetName) throws Exception {\r\n        try {\r\n            FileInputStream ExcelFile = new FileInputStream(Path);\r\n            workBook = new XSSFWorkbook(ExcelFile);\r\n            workSheet = workBook.getSheet(SheetName);\r\n        } catch (Exception e) {\r\n\r\n            throw (e);\r\n\r\n        }\r\n    }\r\n\r\n    public static String getCellData(int RowNum, int ColNum) throws Exception{\r\n        try{\r\n            cell = workSheet.getRow(RowNum).getCell(ColNum);\r\n            return cell.getStringCellValue();\r\n        }catch (Exception e){\r\n            return\"\";\r\n        }\r\n    }\r\n\r\n\r\n    public static void setCellData(String path, String value,  int RowNum, int ColNum) throws Exception {\r\n        try{\r\n            row  = workSheet.getRow(RowNum);\r\n            cell = row.getCell(ColNum);\r\n            if (cell == null) {\r\n                cell = row.createCell(ColNum);\r\n                cell.setCellValue(value);\r\n            } else {\r\n                cell.setCellValue(value);\r\n            }\r\n            FileOutputStream fileOut = new FileOutputStream(path);\r\n            workBook.write(fileOut);\r\n            fileOut.flush();\r\n            fileOut.close();\r\n        }catch(Exception e){\r\n\r\n            throw (e);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public static void createExcelAndWrite(String fileName, String value){\r\n        workBook = new XSSFWorkbook();\r\n        workSheet = workBook.createSheet(\"FIRST SHEET\");\r\n        row = workSheet.createRow(0);\r\n        cell = row.createCell(0);\r\n        cell.setCellValue(value);\r\n        try (FileOutputStream fos = new FileOutputStream(new File(fileName)))\r\n        {\r\n            workBook.write(fos);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ui_automation/utilities/ExcelUtility.java b/src/test/java/ui_automation/utilities/ExcelUtility.java
--- a/src/test/java/ui_automation/utilities/ExcelUtility.java	
+++ b/src/test/java/ui_automation/utilities/ExcelUtility.java	
@@ -28,12 +28,13 @@
         }
     }
 
-    public static String getCellData(int RowNum, int ColNum) throws Exception{
+    public static Object getCellData(int RowNum, int ColNum) throws Exception{
         try{
             cell = workSheet.getRow(RowNum).getCell(ColNum);
             return cell.getStringCellValue();
-        }catch (Exception e){
-            return"";
+        }catch (Exception IllegalStateException){
+            cell = workSheet.getRow(RowNum).getCell(ColNum);
+            return cell.getNumericCellValue();
         }
     }
 
Index: src/test/java/ui_automation/utilities/Driver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ui_automation.utilities;\r\n\r\nimport org.openqa.selenium.WebDriver;\r\n\r\npublic class Driver {\r\n    private Driver(){\r\n\r\n    }\r\n    private static Driver instance=new Driver();\r\n    public static Driver getInstance(){\r\n        return instance;\r\n    }\r\n\r\n    ThreadLocal<WebDriver> driver=new ThreadLocal<WebDriver>();// thread local driver object for webdriver\r\n\r\n    public WebDriver getDriver(){\r\n        return driver.get();\r\n    }\r\n    public  void setDriver(WebDriver driverParameter){\r\n        driver.set(driverParameter);\r\n    }\r\n    public void removeDriver(){\r\n        driver.get().quit();\r\n        driver.remove();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ui_automation/utilities/Driver.java b/src/test/java/ui_automation/utilities/Driver.java
--- a/src/test/java/ui_automation/utilities/Driver.java	
+++ b/src/test/java/ui_automation/utilities/Driver.java	
@@ -7,6 +7,7 @@
 
     }
     private static Driver instance=new Driver();
+
     public static Driver getInstance(){
         return instance;
     }
@@ -16,7 +17,9 @@
     public WebDriver getDriver(){
         return driver.get();
     }
+
     public  void setDriver(WebDriver driverParameter){
+
         driver.set(driverParameter);
     }
     public void removeDriver(){
